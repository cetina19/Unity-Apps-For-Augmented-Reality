using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using WorkFlow;
//
//    var unity = Unity.FromJson(jsonString);

namespace WorkFlow
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Unity
    {
        [JsonProperty("status")]
        public long Status { get; set; }

        [JsonProperty("message")]
        public string Message { get; set; }

        [JsonProperty("data")]
        public Datum[] Data { get; set; }
    }

    public partial class Datum
    {
        [JsonProperty("estimatedDuration")]
        public EstimatedDuration EstimatedDuration { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("steps")]
        public Dictionary<string, Step> Steps { get; set; }
        //public Steps Steps { get; set; }

        [JsonProperty("labels")]
        public string[] Labels { get; set; }

        [JsonProperty("initialStep")]
        public string InitialStep { get; set; }

        [JsonProperty("version")]
        public long Version { get; set; }

        [JsonProperty("users")]
        public string[] Users { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }
    }

    public partial class Step
    {
        [JsonProperty("data")]
        public StepData Data { get; set; }
    }

    public partial class StepData
    {
        [JsonProperty("selected")]
        public bool Selected { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("next", NullValueHandling = NullValueHandling.Ignore)]
        public string Next { get; set; }

        [JsonProperty("layouts")]
        public Layout[] Layouts { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }
    }

    public partial class Layout
    {
        [JsonProperty("items")]
        public Item[] Items { get; set; }
    }

    public partial class Item
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("templateOptions")]
        public TemplateOptions TemplateOptions { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class TemplateOptions
    {
        [JsonProperty("position")]
        public PositionEnum Position { get; set; }

        [JsonProperty("options")]
        public Option[] Options { get; set; }

        [JsonProperty("qrfield")]
        public string Qrfield { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("hPosition")]
        public Position HPosition { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("placeholder")]
        public string Placeholder { get; set; }

        [JsonProperty("vPosition")]
        public Position VPosition { get; set; }

        [JsonProperty("required")]
        public bool TemplateOptionsRequired { get; set; }

        [JsonProperty("max")]
        public long? Max { get; set; }

        [JsonProperty("precision")]
        public long? Precision { get; set; }

        [JsonProperty("videoUrl")]
        public string VideoUrl { get; set; }

        [JsonProperty("imgUrl")]
        public string ImgUrl { get; set; }

        [JsonProperty("disabled")]
        public bool Disabled { get; set; }

        [JsonProperty("unit")]
        public string Unit { get; set; }
        //public Unit Unit { get; set; }

        [JsonProperty("min")]
        public long? Min { get; set; }
    }

    public enum Position { Center };

    public enum PositionEnum { Centered };

    public enum Unit { C, Empty };

    public partial class EstimatedDuration
    {
        [JsonProperty("hours")]
        public long Hours { get; set; }

        [JsonProperty("minutes")]
        public long Minutes { get; set; }
    }

    public partial class Steps
    {
        [JsonProperty("AucvQN7xzdB3IKc4jHCz")]
        public AucvQn7XzdB3IKc4JHCz AucvQn7XzdB3IKc4JHCz { get; set; }

        [JsonProperty("GTXoUxjrUtZhIySiqx0i")]
        public GtXoUxjrUtZhIySiqx0I GtXoUxjrUtZhIySiqx0I { get; set; }

        [JsonProperty("UwDmt6TRN6FFWenXjItR")]
        public UwDmt6Trn6FfWenXjItR UwDmt6Trn6FfWenXjItR { get; set; }

        [JsonProperty("xjfEAHLBaPBU2l8rR81l")]
        public PbqXvm23MAao03PCqK3U XjfEahlBaPbu2L8RR81L { get; set; }

        [JsonProperty("PBQXvm23mAAO03pCqK3U")]
        public PbqXvm23MAao03PCqK3U PbqXvm23MAao03PCqK3U { get; set; }

        [JsonProperty("BScnhw4vt12fpxBNSt3p")]
        public BScnhw4Vt12FpxBnSt3P BScnhw4Vt12FpxBnSt3P { get; set; }

        [JsonProperty("TnacKPfpO1MZpDc6tUIX")]
        public BpbXhhpg6Gey2QGyyQk2 TnacKPfpO1MZpDc6TUix { get; set; }

        [JsonProperty("UBpnfJUvxBsLEzE6xHmV")]
        public BpbXhhpg6Gey2QGyyQk2 UBpnfJUvxBsLEzE6XHmV { get; set; }

        [JsonProperty("2EIjenPrMt3bT1jLup4H")]
        public The2EIjenPrMt3BT1JLup4H The2EIjenPrMt3BT1JLup4H { get; set; }

        [JsonProperty("rAuiSa2ksdNWG773vaAV")]
        public RAuiSa2KsdNwg773VaAv RAuiSa2KsdNwg773VaAv { get; set; }

        [JsonProperty("VrmWuN6cuYdmPR8w1FWO")]
        public VrmWuN6CuYdmPr8W1Fwo VrmWuN6CuYdmPr8W1Fwo { get; set; }

        [JsonProperty("dV9SELcI4rN3N9L2KQY8")]
        public AucvQn7XzdB3IKc4JHCz DV9SeLcI4RN3N9L2Kqy8 { get; set; }

        [JsonProperty("KKW050VGbkFTUMRtZvPg")]
        public Kkw050VGbkFtumRtZvPg Kkw050VGbkFtumRtZvPg { get; set; }

        [JsonProperty("YgiDCw23ggOEsT0dJY4K")]
        public BpbXhhpg6Gey2QGyyQk2 YgiDCw23GgOEsT0DJy4K { get; set; }

        [JsonProperty("EiXoqwrQZGfvg7D6DHRh")]
        public BpbXhhpg6Gey2QGyyQk2 EiXoqwrQzGfvg7D6DhRh { get; set; }

        [JsonProperty("j1XVVxItoU2j4IKKdFfl")]
        public PbqXvm23MAao03PCqK3U J1XvVxItoU2J4IkKdFfl { get; set; }

        [JsonProperty("vFMvov2dp58nSG3Di4mH")]
        public UwDmt6Trn6FfWenXjItR VFMvov2Dp58NSg3Di4MH { get; set; }

        [JsonProperty("BpbXHHPG6Gey2qGYYQk2")]
        public BpbXhhpg6Gey2QGyyQk2 BpbXhhpg6Gey2QGyyQk2 { get; set; }

        [JsonProperty("ACjrkvbtL5KjbgUOmiFF")]
        public ACjrkvbtL5KjbgUOmiFf ACjrkvbtL5KjbgUOmiFf { get; set; }

        [JsonProperty("MSiaxAOmtZ3NkWEVBvhO")]
        public BpbXhhpg6Gey2QGyyQk2 MSiaxAOmtZ3NkWevBvhO { get; set; }

        [JsonProperty("KKSSpW9SJFE2ACddwvFG")]
        public BpbXhhpg6Gey2QGyyQk2 KksSpW9Sjfe2ACddwvFg { get; set; }

        [JsonProperty("SnV3DJ5dHnKEO2wW5RXG")]
        public BpbXhhpg6Gey2QGyyQk2 SnV3Dj5DHnKeo2WW5Rxg { get; set; }

        [JsonProperty("qbXqEbAA0lwEZPT3rXjt")]
        public BpbXhhpg6Gey2QGyyQk2 QbXqEbAa0LwEzpt3RXjt { get; set; }
    }

    public partial class ACjrkvbtL5KjbgUOmiFf
    {
        [JsonProperty("data")]
        public ACjrkvbtL5KjbgUOmiFfData Data { get; set; }
    }

    public partial class ACjrkvbtL5KjbgUOmiFfData
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }

        [JsonProperty("layouts")]
        public FluffyLayout[] Layouts { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }
    }

    public partial class FluffyLayout
    {
        [JsonProperty("items")]
        public FluffyItem[] Items { get; set; }
    }

    public partial class FluffyItem
    {
        [JsonProperty("templateOptions")]
        public FluffyTemplateOptions TemplateOptions { get; set; }

        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }
    }

    public partial class FluffyTemplateOptions
    {
        [JsonProperty("hPosition")]
        public string HPosition { get; set; }

        [JsonProperty("vPosition")]
        public string VPosition { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }
    }

    public partial class Template
    {
        [JsonProperty("orientation")]
        public Orientation Orientation { get; set; }

        [JsonProperty("weights")]
        public long[] Weights { get; set; }

        [JsonProperty("name")]
        public Name Name { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }
    }

    public partial class AucvQn7XzdB3IKc4JHCz
    {
        [JsonProperty("data")]
        public AucvQn7XzdB3IKc4JHCzData Data { get; set; }
    }

    public partial class AucvQn7XzdB3IKc4JHCzData
    {
        [JsonProperty("order")]
        public long Order { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("layouts")]
        public TentacledLayout[] Layouts { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class TentacledLayout
    {
        [JsonProperty("items")]
        public TentacledItem[] Items { get; set; }
    }

    public partial class TentacledItem
    {
        [JsonProperty("templateOptions")]
        public TentacledTemplateOptions TemplateOptions { get; set; }

        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class TentacledTemplateOptions
    {
        [JsonProperty("required", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TemplateOptionsRequired { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("options", NullValueHandling = NullValueHandling.Ignore)]
        public Option[] Options { get; set; }

        [JsonProperty("imgUrl", NullValueHandling = NullValueHandling.Ignore)]
        public Uri ImgUrl { get; set; }

        [JsonProperty("imgName", NullValueHandling = NullValueHandling.Ignore)]
        public string ImgName { get; set; }
    }

    public partial class Option
    {
        [JsonProperty("value")]
        public string Value { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }
    }

    public partial class BScnhw4Vt12FpxBnSt3P
    {
        [JsonProperty("data")]
        public BScnhw4Vt12FpxBnSt3PData Data { get; set; }
    }

    public partial class BScnhw4Vt12FpxBnSt3PData
    {
        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("layouts")]
        public StickyLayout[] Layouts { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }
    }

    public partial class StickyLayout
    {
        [JsonProperty("items")]
        public StickyItem[] Items { get; set; }
    }

    public partial class StickyItem
    {
        [JsonProperty("templateOptions")]
        public StickyTemplateOptions TemplateOptions { get; set; }

        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class StickyTemplateOptions
    {
        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("qrfield")]
        public string Qrfield { get; set; }

        [JsonProperty("required")]
        public bool TemplateOptionsRequired { get; set; }
    }

    public partial class BpbXhhpg6Gey2QGyyQk2
    {
        [JsonProperty("data")]
        public BpbXhhpg6Gey2QGyyQk2Data Data { get; set; }
    }

    public partial class BpbXhhpg6Gey2QGyyQk2Data
    {
        [JsonProperty("layouts")]
        public IndigoLayout[] Layouts { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class IndigoLayout
    {
        [JsonProperty("items")]
        public IndigoItem[] Items { get; set; }
    }

    public partial class IndigoItem
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("templateOptions")]
        public IndigoTemplateOptions TemplateOptions { get; set; }
    }

    public partial class IndigoTemplateOptions
    {
        [JsonProperty("vPosition", NullValueHandling = NullValueHandling.Ignore)]
        public string VPosition { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("hPosition", NullValueHandling = NullValueHandling.Ignore)]
        public string HPosition { get; set; }

        [JsonProperty("imgName", NullValueHandling = NullValueHandling.Ignore)]
        public string ImgName { get; set; }

        [JsonProperty("imgUrl", NullValueHandling = NullValueHandling.Ignore)]
        public Uri ImgUrl { get; set; }
    }

    public partial class GtXoUxjrUtZhIySiqx0I
    {
        [JsonProperty("data")]
        public GtXoUxjrUtZhIySiqx0IData Data { get; set; }
    }

    public partial class GtXoUxjrUtZhIySiqx0IData
    {
        [JsonProperty("order")]
        public long Order { get; set; }

        [JsonProperty("layouts")]
        public IndecentLayout[] Layouts { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class IndecentLayout
    {
        [JsonProperty("items")]
        public IndecentItem[] Items { get; set; }
    }

    public partial class IndecentItem
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("templateOptions")]
        public IndecentTemplateOptions TemplateOptions { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class IndecentTemplateOptions
    {
        [JsonProperty("placeholder")]
        public string Placeholder { get; set; }

        [JsonProperty("required")]
        public bool TemplateOptionsRequired { get; set; }

        [JsonProperty("precision")]
        public long? Precision { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("unit")]
        public string Unit { get; set; }

        [JsonProperty("max")]
        public long Max { get; set; }

        [JsonProperty("min")]
        public long Min { get; set; }
    }

    public partial class PbqXvm23MAao03PCqK3U
    {
        [JsonProperty("data")]
        public PbqXvm23MAao03PCqK3UData Data { get; set; }
    }

    public partial class PbqXvm23MAao03PCqK3UData
    {
        [JsonProperty("layouts")]
        public HilariousLayout[] Layouts { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }
    }

    public partial class HilariousLayout
    {
        [JsonProperty("items")]
        public HilariousItem[] Items { get; set; }
    }

    public partial class HilariousItem
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("templateOptions")]
        public HilariousTemplateOptions TemplateOptions { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class HilariousTemplateOptions
    {
        [JsonProperty("required")]
        public bool TemplateOptionsRequired { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("placeholder")]
        public string Placeholder { get; set; }

        [JsonProperty("timepicker", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Timepicker { get; set; }
    }

    public partial class Kkw050VGbkFtumRtZvPg
    {
        [JsonProperty("data")]
        public Kkw050VGbkFtumRtZvPgData Data { get; set; }
    }

    public partial class Kkw050VGbkFtumRtZvPgData
    {
        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("layouts")]
        public IndecentLayout[] Layouts { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class RAuiSa2KsdNwg773VaAv
    {
        [JsonProperty("data")]
        public RAuiSa2KsdNwg773VaAvData Data { get; set; }
    }

    public partial class RAuiSa2KsdNwg773VaAvData
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("layouts")]
        public MagentaLayout[] Layouts { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }
    }

    public partial class MagentaLayout
    {
        [JsonProperty("items")]
        public MagentaItem[] Items { get; set; }
    }

    public partial class MagentaItem
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("templateOptions")]
        public MagentaTemplateOptions TemplateOptions { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class MagentaTemplateOptions
    {
        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("videoUrl")]
        public Uri VideoUrl { get; set; }

        [JsonProperty("videoName")]
        public string VideoName { get; set; }
    }

    public partial class The2EIjenPrMt3BT1JLup4H
    {
        [JsonProperty("data")]
        public The2EIjenPrMt3BT1JLup4HData Data { get; set; }
    }

    public partial class The2EIjenPrMt3BT1JLup4HData
    {
        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("layouts")]
        public PurpleLayout[] Layouts { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }
    }

    public partial class PurpleLayout
    {
        [JsonProperty("items")]
        public PurpleItem[] Items { get; set; }
    }

    public partial class PurpleItem
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("templateOptions")]
        public PurpleTemplateOptions TemplateOptions { get; set; }
    }

    public partial class PurpleTemplateOptions
    {
        [JsonProperty("hPosition", NullValueHandling = NullValueHandling.Ignore)]
        public string HPosition { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("vPosition", NullValueHandling = NullValueHandling.Ignore)]
        public string VPosition { get; set; }

        [JsonProperty("options", NullValueHandling = NullValueHandling.Ignore)]
        public Option[] Options { get; set; }

        [JsonProperty("required", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TemplateOptionsRequired { get; set; }
    }

    public partial class UwDmt6Trn6FfWenXjItR
    {
        [JsonProperty("data")]
        public UwDmt6Trn6FfWenXjItRData Data { get; set; }
    }

    public partial class UwDmt6Trn6FfWenXjItRData
    {
        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("layouts")]
        public AmbitiousLayout[] Layouts { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("order")]
        public long Order { get; set; }
    }

    public partial class AmbitiousLayout
    {
        [JsonProperty("items")]
        public AmbitiousItem[] Items { get; set; }
    }

    public partial class AmbitiousItem
    {
        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("templateOptions")]
        public AmbitiousTemplateOptions TemplateOptions { get; set; }
    }

    public partial class AmbitiousTemplateOptions
    {
        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("required")]
        public bool TemplateOptionsRequired { get; set; }
    }

    public partial class VrmWuN6CuYdmPr8W1Fwo
    {
        [JsonProperty("data")]
        public VrmWuN6CuYdmPr8W1FwoData Data { get; set; }
    }

    public partial class VrmWuN6CuYdmPr8W1FwoData
    {
        [JsonProperty("order")]
        public long Order { get; set; }

        [JsonProperty("editNameMode")]
        public bool EditNameMode { get; set; }

        [JsonProperty("layouts")]
        public CunningLayout[] Layouts { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("template")]
        public Template Template { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }
    }

    public partial class CunningLayout
    {
        [JsonProperty("items")]
        public CunningItem[] Items { get; set; }
    }

    public partial class CunningItem
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("templateOptions")]
        public CunningTemplateOptions TemplateOptions { get; set; }
    }

    public partial class CunningTemplateOptions
    {
        [JsonProperty("imgName")]
        public string ImgName { get; set; }

        [JsonProperty("imgUrl")]
        public Uri ImgUrl { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }
    }

    public enum TypeEnum { Image, Label };

    public enum Name { Fullscreen, HorizontalEqual, VerticalEqual };

    public enum Orientation { Column, Row };

    public partial class Unity
    {
        public static Unity FromJson(string json) => JsonConvert.DeserializeObject<Unity>(json, WorkFlow.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Unity self) => JsonConvert.SerializeObject(self, WorkFlow.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                NameConverter.Singleton,
                OrientationConverter.Singleton,
                TypeEnumConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class NameConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Name) || t == typeof(Name?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "fullscreen":
                    return Name.Fullscreen;
                case "horizontal-equal":
                    return Name.HorizontalEqual;
                case "vertical-equal":
                    return Name.VerticalEqual;
            }
            throw new Exception("Cannot unmarshal type Name");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Name)untypedValue;
            switch (value)
            {
                case Name.Fullscreen:
                    serializer.Serialize(writer, "fullscreen");
                    return;
                case Name.HorizontalEqual:
                    serializer.Serialize(writer, "horizontal-equal");
                    return;
                case Name.VerticalEqual:
                    serializer.Serialize(writer, "vertical-equal");
                    return;
            }
            throw new Exception("Cannot marshal type Name");
        }

        public static readonly NameConverter Singleton = new NameConverter();
    }

    internal class OrientationConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Orientation) || t == typeof(Orientation?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "column":
                    return Orientation.Column;
                case "row":
                    return Orientation.Row;
            }
            throw new Exception("Cannot unmarshal type Orientation");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Orientation)untypedValue;
            switch (value)
            {
                case Orientation.Column:
                    serializer.Serialize(writer, "column");
                    return;
                case Orientation.Row:
                    serializer.Serialize(writer, "row");
                    return;
            }
            throw new Exception("Cannot marshal type Orientation");
        }

        public static readonly OrientationConverter Singleton = new OrientationConverter();
    }

    internal class TypeEnumConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(TypeEnum) || t == typeof(TypeEnum?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "image":
                    return TypeEnum.Image;
                case "label":
                    return TypeEnum.Label;
            }
            throw new Exception("Cannot unmarshal type TypeEnum");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (TypeEnum)untypedValue;
            switch (value)
            {
                case TypeEnum.Image:
                    serializer.Serialize(writer, "image");
                    return;
                case TypeEnum.Label:
                    serializer.Serialize(writer, "label");
                    return;
            }
            throw new Exception("Cannot marshal type TypeEnum");
        }

        public static readonly TypeEnumConverter Singleton = new TypeEnumConverter();
    }
}


public class JsonHeader : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
